#内置容器配置
#内置容器端口号
server.port=80
#内置容器上下文
server.servlet.context-path=/

# Spring Boot 日志
# SpringBoot默认使用的的日志框架是slf4j + Logback
# Logback 没有 FATAL 级别，对应着 ERROR
# 日志级别从低到高
# TRACE < DEBUG < INFO < WARN < ERROR
## 默认配置INFO、WARN、ERROR级别的日志输出到控制台
logging.level.root=info
##配置自己的应用程序日志级别,com.xingyun 是自己应用程序的根包
logging.level.com.xingyun=debug
##设置其他全部的日志等级
logging.level.*=warn
## 打印调试
#debug=false
## 增强打印调试
#trace=false
##日志记录到文件 两者选其一，都配置的话只有logging.file 生效
#logging.path=/opt/logs/
#logging.file=/opt/logs/ftp-share-file-server/spring.log
## 设置日志文件最大大小,默认为1024MB 当日志文件到达1024Mb时会使用压缩包保存
#logging.file.max-size=1024MB
## 保留最近多少天的日志,超过7天的日志就会自动删除
#logging.file.max-history=7

## Thymeleaf 配置
# Thymeleaf 模板配置前缀
spring.thymeleaf.prefix=classpath:/templates/
# Thymeleaf 模板配置后缀
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
# 关闭缓存，即时刷新，上线生产环境需改成true
spring.thymeleaf.cache=false

#h2配置
#启用SQL语句的日志记录
spring.jpa.show-sql=true
#设置ddl模式
spring.jpa.hibernate.ddl-auto=update
##数据库连接设置
#配置h2数据库的连接地址
spring.datasource.url=jdbc:h2:~/test
#配置数据库用户名
spring.datasource.username=sa
#配置数据库密码
spring.datasource.password=sa
#配置JDBC Driver
spring.datasource.driverClassName=org.h2.Driver
##h2 web console设置
#表明使用的数据库平台是h2
spring.datasource.platform=h2
#进行该配置后，h2 web console就可以在远程访问了。否则只能在本机访问。
spring.h2.console.settings.web-allow-others=false
# 数据库后台访问URL上下文
spring.h2.console.path=/h2
#进行该配置，程序开启时就会启动h2 web console 当然这是默认的，如果你不想在启动程序时启动h2 web console，那么就设置为false。
spring.h2.console.enabled=false

spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB

com.xingyun.ftp.ftp-share-folder=D:/ftp_share_folder